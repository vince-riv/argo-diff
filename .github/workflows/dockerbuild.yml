---
name: Docker build

on:
  push:
    tags: ['*.*.*', '*.*.*-*']
    branches: [main]
    paths:
      - 'cmd/**'
      - 'internal/**'
      - 'go.*'
      - '.github/workflows/*'
  pull_request:
    branches: [main]
    paths:
      - 'cmd/**'
      - 'internal/**'
      - 'go.*'
      - '.github/workflows/*'
  workflow_dispatch: {}

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  docker-build-and-push:
    runs-on: ubuntu-latest
    #runs-on: [self-hosted]
    permissions:
      contents: read
      packages: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - name: Prepare git-rev.txt
        run: |
          set -x
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo ${GITHUB_REF#refs/tags/} > git-rev.txt
          else
            echo ${GITHUB_SHA::8} > git-rev.txt
          fi
      -
        name: Set up Docker Context for Buildx
        run: docker context create builders
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          endpoint: builders
      -
        name: Log in to container register
        id: login-ghcr
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=sha,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=sha,event=pr
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
